#ifndef FLIGHT_DYNAMICS_H
#define FLIGHT_DYNAMICS_H

#include <cmath>

class FlightDynamics {
public:
    /**
     * @brief Constructor that initializes the flight dynamics properties (critical for simulation)
     * @param mass The Initial mass of the rocket (kg) - (PENDING CHANGES)
     * @param thrust The Thrust force generated by engines (N) - (PENDING CHANGES)
     * @param burnRate The Fuel consumption rate per second (kg/s) - (PENDING CHANGES)
     * @param isp The Specific impulse of the engine (s) - (PENDING CHANGES)
     * @param dragArea The Cross-sectional area of the rocket for drag calculations (m²) - (PENDING CHANGES)
     */
    FlightDynamics(double mass, double thrust, double burnRate, double isp, double dragArea);

    /**
     * @brief Updates velocity, altitude, drag force, and fuel consumption per time step (dt)
     * @param dt Time step in seconds
     */
    void update(double dt);

    // Getters for key parameters
    double getAltitude() const;
    double getVelocity() const;
    double getFuel() const;
    double getThrust() const;
    double getDeltaV() const;
    double getDragForce() const;

private:
    double mass;         // The current mass of the rocket (kg) - dynamically updated
    double thrust;       // The thrust force in Newtons (N)
    double burnRate;     // The fuel consumption rate in kg/s
    double isp;          // The specific impulse of the engine (s)
    double velocity;     // The current velocity in m/s
    double altitude;     // The current altitude in meters
    double fuel;         // The remaining fuel in kg
    double deltaV;       // The change in velocity (m/s) - updated dynamically
    double dragForce;    // The drag force in Newtons (N)
    double dragArea;     // The reference cross-sectional area (m²) - affects drag calculations
    double gravity;      // The acceleration due to gravity (m/s²) - updated dynamically
};

#endif // FLIGHT_DYNAMICS_H
